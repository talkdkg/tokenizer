<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
>
    <display-name>Vaadin Web Application</display-name>
    <context-param>
        <param-name>contextConfigLocation</param-name>
<!-- 
        <param-value>
            classpath*:META-INF/spring-context.xml,
            classpath*:META-INF/test-security-context.xml,
            classpath*:META-INF/entitymanager.xml,
            classpath*:META-INF/infrastructure-context.xml
        </param-value>
 -->
        <param-value>
            classpath*:META-INF/tokenizer-executor-module.xml
        </param-value>

    </context-param>



<!--     <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <async-supported>true</async-supported>
    </filter>
    <filter>
        <filter-name>wicket-filter</filter-name>
        <filter-class>org.apache.wicket.protocol.http.WicketFilter</filter-class>
        <async-supported>true</async-supported>
        <init-param>
            <param-name>applicationFactoryClassName</param-name>
            <param-value>org.apache.wicket.spring.SpringWebApplicationFactory</param-value>
        </init-param>
        <init-param>
            <param-name>configuration</param-name>
            <param-value>development</param-value>
        </init-param>
    </filter>
 -->
 
 
<!-- Enable in Production: -->
<!-- 
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>wicket-filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
 -->
 

    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
  
    
<!--
    <listener>
        <listener-class>
            org.tokenizer.ui.TokenizerServletContextListener
        </listener-class>
    </listener>
 -->
    <context-param>
        <description>Vaadin production mode</description>
        <param-name>productionMode</param-name>
        <param-value>false</param-value>
    </context-param>
    <servlet>
        <description>AtmosphereServlet</description>
        <servlet-name>AtmosphereServlet</servlet-name>
        <servlet-class>org.atmosphere.cpr.AtmosphereServlet</servlet-class>
        <init-param>
            <param-name>org.atmosphere.disableOnStateEvent</param-name>
            <param-value>true</param-value>
        </init-param>
 <!--        <init-param>
            <param-name>org.atmosphere.useWebSocket</param-name>
            <param-value>true</param-value>
        </init-param>
 -->
        <load-on-startup>1</load-on-startup>
        <async-supported>true</async-supported>
    </servlet>


 
 <!--     <init-param>
      <param-name>org.atmosphere.useNative</param-name>
      <param-value>true</param-value>
    </init-param>
    <init-param>
      <param-name>org.atmosphere.cpr.broadcasterCacheClass</param-name>
      <param-value>org.atmosphere.cache.HeaderBroadcasterCache</param-value>
    </init-param>
    <init-param>
      <param-name>org.atmosphere.cpr.AtmosphereInterceptor</param-name>
      <param-value>org.atmosphere.client.TrackMessageSizeInterceptor</param-value>
    </init-param>
 -->
    <servlet>
        <servlet-name>MyVaadinServlet</servlet-name>
        <servlet-class>org.tokenizer.ui.MyVaadinServlet</servlet-class>

        
<!--         <servlet-class>com.vaadin.terminal.gwt.server.ApplicationServlet</servlet-class>
 -->
        <init-param>
            <description>Vaadin application class to start</description>
            <param-name>application</param-name>
            <param-value>org.tokenizer.ui.MyVaadinApplication</param-value>
        </init-param>
        <init-param>
            <param-name>widgetset</param-name>
            <param-value>org.tokenizer.ui.MyWidgetSet</param-value>
        </init-param>
        <init-param>
            <description>This is optinal parameter that control the
      timeout before "Conection guard" is for end user. If you
      have lots of synchronous tasks that take long time, you might
      want to increase this value to avoid non-intentional red screens.
      Default value is 5 seconds.</description>
            <param-name>connectionGuardTimeout</param-name>
            <param-value>60</param-value>
        </init-param>
 <!--        <init-param>
            <param-name>disable-xsrf-protection</param-name>
            <param-value>true</param-value>
        </init-param>
 -->       <load-on-startup>0</load-on-startup>

<!-- 
Additionally, any servlet filters that sit in front of the Atmosphere servlet must have the <async-supported>true</async-supported> element. 

<async-supported>true</async-supported>
 -->
    </servlet>
    <servlet-mapping>
        <servlet-name>AtmosphereServlet</servlet-name>
        <url-pattern>/UIDL/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>MyVaadinServlet</servlet-name>
        <url-pattern>/*</url-pattern>
    </servlet-mapping>
     <servlet-mapping>
        <servlet-name>MyVaadinServlet</servlet-name>
        <url-pattern>/VAADIN/*</url-pattern>
    </servlet-mapping>

<!--     <welcome-file-list>
        <welcome-file>/index</welcome-file>
    </welcome-file-list>
 --></web-app>